*simpl.txt*           For Vim version 8               Last change: 2020 Jan 08
*simpl* *vim-simpl*

                               _                 _ ~
                           ___(_)_ __ ___  _ __ | |~
                          / __| | '_ ` _ \| '_ \| |~
                          \__ \ | | | | | | |_) | |~
                          |___/_|_| |_| |_| .__/|_|~
                                          |_|      ~

==============================================================================
CONTENTS                                                      *simpl-contents*

    1. Intro ................................................... |simpl-intro|
    2. Usage ................................................... |simpl-usage|
    3. Configuration ................................... |simpl-configuration|
    4. License ............................................... |simpl-license|
    5. Bugs ..................................................... |simpl-bugs|
    6. Contributing ..................................... |simpl-contributing|
    7. Credits ............................................... |simpl-credits|

==============================================================================
INTRO                                                            *simpl-intro*

simpl is (Yet another) REPL/interpreter plugin for vim

==============================================================================
USAGE                                                            *simpl-usage*

Install it with your favorite plugin manager, and then use the provided
interface.

The author has gotten a great deal of mileage out of the following mappings: >

    nnoremap <leader>t :call simpl#repl('++close')<CR>
    nnoremap <leader>T :call simpl#repl()<CR>
    nnoremap <localleader>l :call simpl#load()<CR>
    nnoremap <localleader>L :call simpl#prompt_and_load()<CR>
<
                                                                  *simpl#repl*
simpl#repl([{opts}])
                Runs a REPL/interpreter. Uses `b:interpreter` if set; 'shell'
                otherwise. Function arguments are provided as options to the
                `:terminal` command. See also |simpl_mods|.

                                                                 *simpl#shell*
simpl#shell([{opts}])
                Like |simpl#repl|, but forces the use of 'shell'. See also
                |simpl_mods|.

                                                            *simpl#popup_repl*
simpl#popup_repl([{opts}])
                Like |simpl#repl| with `++close`, but uses a popup. You must
                close the popup (e.g., by quitting the repl) to continue. Call
                |popup_clear()| in a pinch, but note that the repl may still
                be running if you do. See also |simpl_mods|.

                                                            *simpl#popup_load*
simpl#popup_load([{opts}])
                Like |simpl#load| with `++close`, but uses a popup. Opposite
		of *simpl#repl* , this loads the file contents into the pop-up
		REPL.
		You must close the popup (e.g., by quitting the repl) to continue,
		using a keyboard shortcut such as CTRL+C or CTRL+D often works.
                See also |simpl_mods|.

                                                           *simpl#popup_shell*
simpl#popup_shell([{opts}])
                Like |simpl#shell| with `++close`, but uses a popup. You must
                close the popup (e.g., by quitting the shell) to continue.
                Call |popup_clear()| in a pinch, but note that the shell may
                still be running if you do. See also |simpl_mods|.

                                                                  *simpl#load*
simpl#load([{opts}])
                Loads a file or module into the REPL/interpreter. Opens one if
                none exists. The optional parameters {opts} are passed to the
                newly created terminal buffer; {opts} should be |:terminal|
                options separated by a comma (see |term++close|). For
                example: >

    :call simpl#load('++rows=10', '++close')
<
                This function passes the current file as arguments to the
                filetype's callback. See also |simpl_mods|.


                                                       *simpl#prompt_and_load*
simpl#prompt_and_load([{opts}])
                Loads a file or module into the REPL/interpreter. Opens one
                if none exists. Prompts for a filename based on the filetype's
                callback. See also |simpl_mods|.

                The optional variadic parameters {opts} are passed to the
                terminal buffer if no terminal buffer already exists. See
                |simpl#load| for details.

                                                                  *simpl_mods*
This global-local variable influences how new windows are opened. It defaults
to "no modifiers," but you can use `b:simpl_mods` and `g:simpl_mods` to
override it (with the expected precedence). These are expected to be command
modifiers like in |<mods>|.

NOTE this may interact poorly with |simpl#popup_repl| and |simpl#popup_shell|,
which will use the same <mods> before closing the opened window to reopen it
as a popup.

==============================================================================
CONFIGURATION                                             *simpl-configuration*

simpl's main configuration consists of two pieces: the preferred
REPL/interpreter, and the filetype-based load-callbacks.

The first is `b:interpreter`. See |simpl#repl|.

The second is more complicated

------------------------------------------------------------------------------
                                                              *simpl-filetype*

simpl needs two pieces of information to correctly process calls to
|simpl#load| and |simpl#prompt_and_load| for a given filetype. Namely, it
needs

    - a way to construct the "load" code; and
    - prompt text

simpl supports the execution of arbitrary code to determine these properties;
see the provided plugin code for examples.

To register a filetype, call |simpl#register| with the appropriate parameters.

                                                              *simpl#register*
simpl#register(filetype, BuildLoadExpr, GetPromptText)
                Registers `filetype` with simpl.

                Both `BuildLoadExpr` and `GetPromptText` are |Funcrefs|. If
                your vim supports |lambda|s, those count as |Funcrefs|.

                `BuildLoadExpr` is called with a single parameter: the name of
                a file. It must return a string representing
                language-appropriate code that would load the given file or
                module. This may be arbitrarily complex.

                `GetPromptText` is called with no parameters. It must return a
                string representing a language-appropriate prompt, indicating
                that a file or module is to be loaded. This may be arbitrarily
                complex.

                                                         *g:simpl_no_defaults*
If truthy, simpl will not register its default filetype information. Note
however that, when calling |simpl#register| with the same filetype, the
last call will override all others.

                                                         *b:simpl_popup_options*
Dictionary, see *popup_create-arguments* {options}. If you wish to override
the default popup arguments, you may `let b:simpl_popup_conf`  
The default settings are:  
`#{minheight: &lines-10, minwidth: &columns-10, border:[], padding: []}`


==============================================================================
LICENSE                                                        *simpl-license*

MIT License. Copyright Â© 2019 D. Ben Knoble
Full text available at
https://github.com/benknoble/vim-simpl/blob/master/LICENSE

==============================================================================
BUGS                                                              *simpl-bugs*

At the time of this writing, no major bugs have been found.

If you find one and wish to report it, you can do so at
https://github.com/benknoble/vim-simpl/issues

==============================================================================
CONTRIBUTING                                              *simpl-contributing*

Want to submit a new feature, bugfix, or hack on simpl?
Submit pull requests to
https://github.com/benknoble/vim-simpl/pulls

Existing code determines style guidelines.

==============================================================================
CREDITS                                                        *simpl-credits*

Maintained by:
- D. Ben Knoble (https://github.com/benknoble)

Git repository:
https://github.com/benknoble/vim-simpl

 vim:tw=78:ts=8:ft=help:norl:
